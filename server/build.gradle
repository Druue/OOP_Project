plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'application'
}

application {
	mainClassName = 'nl.tudelft.oopp.server.DemoApplication'
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	compile project(":api")
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile group: 'mysql', name: 'mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.session:spring-session-core'

	// Local test database (in-memory)
	implementation 'com.h2database:h2'
	developmentOnly 'org.hibernate:hibernate-entitymanager'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'

	testCompile("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.6.0")

	test {
            testLogging.showStandardStreams = true
            // listen to events in the test execution lifecycle
           beforeTest {
              descriptor -> logger.lifecycle("Running test: " + descriptor)
           }
       }
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
